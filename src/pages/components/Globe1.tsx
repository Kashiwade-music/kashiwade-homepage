/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 globe1.glb --types 
*/
import { Environment, useGLTF } from "@react-three/drei";
import React, { forwardRef, useRef } from "react";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    globe1: THREE.Mesh;
  };
  materials: {
    マテリアル: THREE.MeshPhysicalMaterial;
  };
  // animations: GLTFAction[];
};

type MeshProps = JSX.IntrinsicElements["mesh"];

export const Globe1 = forwardRef<THREE.Mesh, MeshProps>((props, ref) => {
  const { nodes, materials } = useGLTF("/assets/globe1.glb") as GLTFResult;
  return (
    <>
      <Environment preset="forest" />
      <mesh
        ref={ref}
        geometry={nodes.globe1.geometry}
        material={materials.マテリアル}
        {...props}
      />
    </>
  );
});

// export const Globe1 = forwardRef<THREE.Group, GroupProps>(({ children, ...props }, ref) => {
//   return (
//     <group ref={ref} {...props}>
//       <GlobeMesh />
//       {children}
//     </group>
//   );
// });
useGLTF.preload("/globe1.glb");
